swagger: '2.0'
info:
  title: Restful API Documentation
  description: by Leglo.
  version: "1.0.0"

# the domain of the service
host: localhost:3000

# array of all schemes that your API supports
schemes:
  - http

# will be prefixed to all paths
basePath: /
produces:
  - application/json

# Auth
securityDefinitions:
  Bearer:
    description: Authorization header using the Bearer schema. More info at [https://jwt.io/introduction/](https://jwt.io/introduction/)
    type: apiKey
    name: Authorization
    in: header

paths:

# Sign In
  /api/auth/local/:
    post:
      summary: Sign in with username and password
      produces:
        - application/json
      tags:
        - Auth
      parameters:
        - name: json
          in: body
          required: true
          schema:
            "$ref": "#/definitions/AuthForm"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              token:
                type: string
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

# Sign Up
  /api/auth/local/signup:
    post:
      summary: Sign up with username and password
      produces:
        - application/json
      tags:
        - Auth
      parameters:
        - name: json
          in: body
          required: true
          schema:
            "$ref": "#/definitions/AuthForm"
            
      responses:
        201:
          description: Success
          schema:
            type: object
            properties:
              token:
                type: string
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

# Reset Password
  /api/auth/local/reset:
    post:
      summary: Reset Password
      produces:
        - application/json
      tags:
        - Auth
      security:
        - Bearer: []
      parameters:
        - name: json
          in: body
          required: true
          schema:
            "$ref": "#/definitions/PasswordResetForm"
      responses:
        205:
          description: Success
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

# Mobile Wechat
  /api/auth/mobile/wechat:
    post:
      summary: Oauth2 with wechat mobile
      produces:
        - application/json
      tags:
        - Auth
      parameters:
        - name: json
          in: body
          required: true
          schema:
            "$ref": "#/definitions/AuthMobileWechatForm"
      responses:
        200:
          description: Success
          schema:
            type: object
            properties:
              token:
                type: string
        201:
          description: Success
          schema:
            type: object
            properties:
              token:
                type: string
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  /api/logs:
  # index
    get:
      summary: List all Logs
      produces:
        - application/json
      tags:
        - Log
      parameters:
        - name: _options
          in: query
          schema:
            "$ref": "#/definitions/PaginateOptions"
        - name: _filters
          in: query
          schema:
            "$ref": "#/definitions/LogsFilters"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/Logs"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # create
    post:
      summary: Create a new Log
      produces:
        - application/json
      tags:
        - Log
      parameters:
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/LogModel"
      responses:
        201:
          description: Success
          schema:
            "$ref": "#/definitions/Log"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  /api/logs/{id}:
  # show
    get:
      summary: Find a Log by ID
      produces:
        - application/json
      tags:
        - Log
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: _options
          in: query
          schema:
            "$ref": "#/definitions/ShowOptions"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/Log"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # update
    put:
      summary: Modify a Log
      produces:
        - application/json
      tags:
        - Log
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/LogModel"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/Log"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # updatePartial
    patch:
      summary: Modify a Log partially
      produces:
        - application/json
      tags:
        - Log
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/LogModel"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/Log"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # remove
    delete:
      summary: Remove a Log by ID
      produces:
        - application/json
      tags:
        - Log
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Success
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  /api/samples:
  # index
    get:
      summary: List all Samples
      produces:
        - application/json
      tags:
        - Sample
      parameters:
        - name: _options
          in: query
          schema:
            "$ref": "#/definitions/PaginateOptions"
        - name: _filters
          in: query
          schema:
            "$ref": "#/definitions/SamplesFilters"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/Samples"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # create
    post:
      summary: Create a new Sample
      produces:
        - application/json
      tags:
        - Sample
      parameters:
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/SampleModel"
      responses:
        201:
          description: Success
          schema:
            "$ref": "#/definitions/Sample"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  /api/samples/{id}:
  # show
    get:
      summary: Find a Sample by ID
      produces:
        - application/json
      tags:
        - Sample
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: _options
          in: query
          schema:
            "$ref": "#/definitions/ShowOptions"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/Sample"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # update
    put:
      summary: Modify a Sample
      produces:
        - application/json
      tags:
        - Sample
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/SampleModel"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/Sample"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # updatePartial
    patch:
      summary: Modify a Sample partially
      produces:
        - application/json
      tags:
        - Sample
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/SampleModel"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/Sample"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # remove
    delete:
      summary: Remove a Sample by ID
      produces:
        - application/json
      tags:
        - Sample
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Success
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  /api/sampleWithSockets:
  # index
    get:
      summary: List all SampleWithSockets
      produces:
        - application/json
      tags:
        - SampleWithSocket
      parameters:
        - name: _options
          in: query
          schema:
            "$ref": "#/definitions/PaginateOptions"
        - name: _filters
          in: query
          schema:
            "$ref": "#/definitions/SampleWithSocketsFilters"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithSockets"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # create
    post:
      summary: Create a new SampleWithSocket
      produces:
        - application/json
      tags:
        - SampleWithSocket
      parameters:
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/SampleWithSocketModel"
      responses:
        201:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithSocket"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  /api/sampleWithSockets/{id}:
  # show
    get:
      summary: Find a SampleWithSocket by ID
      produces:
        - application/json
      tags:
        - SampleWithSocket
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: _options
          in: query
          schema:
            "$ref": "#/definitions/ShowOptions"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithSocket"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # update
    put:
      summary: Modify a SampleWithSocket
      produces:
        - application/json
      tags:
        - SampleWithSocket
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/SampleWithSocketModel"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithSocket"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # updatePartial
    patch:
      summary: Modify a SampleWithSocket partially
      produces:
        - application/json
      tags:
        - SampleWithSocket
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: json
          in: body
          type: object
          required: true
          schema:
            "$ref": "#/definitions/SampleWithSocketModel"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithSocket"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # remove
    delete:
      summary: Remove a SampleWithSocket by ID
      produces:
        - application/json
      tags:
        - SampleWithSocket
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Success
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  /api/sampleWithImages:
  # index
    get:
      summary: List all SampleWithImages
      produces:
        - application/json
      tags:
        - SampleWithImage
      parameters:
        - name: _options
          in: query
          schema:
            "$ref": "#/definitions/PaginateOptions"
        - name: _filters
          in: query
          schema:
            "$ref": "#/definitions/SampleWithImagesFilters"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithImages"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # create
    post:
      summary: Create a new SampleWithImage
      produces:
        - application/json
      tags:
        - SampleWithImage
      parameters:
        - name: name
          in: formData
          type: string
        - name: image
          in: formData
          type: file
      responses:
        201:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithImage"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  /api/sampleWithImages/{id}:
  # show
    get:
      summary: Find a SampleWithImage by ID
      produces:
        - application/json
      tags:
        - SampleWithImage
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: _options
          in: query
          schema:
            "$ref": "#/definitions/ShowOptions"
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithImage"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # update
    put:
      summary: Modify a SampleWithImage
      produces:
        - application/json
      tags:
        - SampleWithImage
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: name
          in: formData
          type: string
        - name: image
          in: formData
          type: file
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithImage"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # updatePartial
    patch:
      summary: Modify a SampleWithImage partially
      produces:
        - application/json
      tags:
        - SampleWithImage
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: name
          in: formData
          type: string
        - name: image
          in: formData
          type: file
      responses:
        200:
          description: Success
          schema:
            "$ref": "#/definitions/SampleWithImage"
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"

  # remove
    delete:
      summary: Remove a SampleWithImage by ID
      produces:
        - application/json
      tags:
        - SampleWithImage
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        204:
          description: Success
        4xx:
          description: Fail
          schema:
            "$ref": "#/definitions/Error"
definitions:

# errors
  Error:
    type: object
    properties:
      name:
        type: string
      message:
        type: string
      errors:
        type: object

# show options
  ShowOptions:
    type: object
    properties:
      select:
        type: string
      populate:
        type: string

# paginate options
  PaginateOptions:
    description: More info at [https://www.npmjs.com/package/mongoose-paginate](https://www.npmjs.com/package/mongoose-paginate)
    type: object
    properties:
      page:
        type: number
      limit:
        type: number
      sort:
        type: string
      select:
        type: string
      populate:
        type: string
      lean:
        type: boolean
      leanWithId:
        type: boolean
      offset:
        type: number

  PaginateResult:
    type: object
    required:
      - docs
      - total
      - limit
    properties:
      total:
        type: number
      limit:
        type: number
      page:
        type: number
      pages:
        type: number
      prev:
        type: number
      next:
        type: number
      offset:
        type: number

# Image infos
  ImageInfo:
    type: object
    properties:
      url:
        type: string
      size:
        type: number
      height:
        type: number
      width:
        type: number
      format:
        type: string
      channel:
        type: number
      hasAlpha:
        type: boolean
      hasProfile:
        type: boolean

  Auth:
    allOf:
      - "$ref": "#/definitions/AuthModel"
      - properties:
          _id:
            type: string

  AuthModel:
    type: object
    properties:
      username:
        type: string
      roles:
        type: array
        items:
          type: string
      providers:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            openid:
              type: string

  AuthForm:
    type: object
    properties:
      username: 
        type: string
      password: 
        type: string

  PasswordResetForm:
    type: object
    properties:
      oldPassword: 
        type: string
      newPassword: 
        type: string

  AuthMobileWechatForm:
    type: object
    properties:
      access_token:
        type: string
      openid:
        type: string

  Log:
    allOf:
      - "$ref": "#/definitions/LogModel"
      - properties:
          _id:
            type: string

  LogModel:
    type: object
    properties:
      name:
        type: string
      info:
        type: string
      active:
        type: boolean

  Logs:
    allOf:
      - properties:
          docs:
            type: array
            items:
              "$ref": "#/definitions/Log"
      - "$ref": "#/definitions/PaginateResult"

  LogsFilters:
    type: object
    properties:
      active:
        type: boolean


  Sample:
    allOf:
      - "$ref": "#/definitions/SampleModel"
      - properties:
          _id:
            type: string

  SampleModel:
    type: object
    properties:
      name:
        type: string
      info:
        type: string

  Samples:
    allOf:
      - properties:
          docs:
            type: array
            items:
              "$ref": "#/definitions/Sample"
      - "$ref": "#/definitions/PaginateResult"

  SamplesFilters:
    type: object
    properties:
      name:
        type: string


  SampleWithSocket:
    allOf:
      - "$ref": "#/definitions/SampleWithSocketModel"
      - properties:
          _id:
            type: string

  SampleWithSocketModel:
    type: object
    properties:
      name:
        type: string
      info:
        type: string

  SampleWithSockets:
    allOf:
      - properties:
          docs:
            type: array
            items:
              "$ref": "#/definitions/SampleWithSocket"
      - "$ref": "#/definitions/PaginateResult"

  SampleWithSocketsFilters:
    type: object
    properties:
      name:
        type: string


  SampleWithImage:
    allOf:
      - "$ref": "#/definitions/SampleWithImageModel"
      - properties:
          _id:
            type: string

  SampleWithImageModel:
    type: object
    properties:
      name:
        type: string
      image:
        "ref": "#/definitions/ImageInfo"

  SampleWithImages:
    allOf:
      - properties:
          docs:
            type: array
            items:
              "$ref": "#/definitions/SampleWithImage"
      - "$ref": "#/definitions/PaginateResult"

  SampleWithImagesFilters:
    type: object
    properties:
      name:
        type: string
